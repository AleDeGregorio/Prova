{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexd\\\\Documents\\\\Progetto-Unipa\\\\sitoBE\\\\src\\\\GestioneProprietario\\\\Modifica\\\\List.js\";\nimport React, { Component } from \"react\";\nimport ListItem from \"./ListItem\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { theme } from \"../shared/theme\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Redirect } from 'react-router-dom';\nconst ListWrapper = styled.div`\n  width: ${props => props.theme.maxWidth};\n  max-width: 90%;\n  display: block;\n  margin: auto;\n  padding: 70px 0 20px;\n  position: relative;\n  z-index: 10;\n  @media (min-width: ${props => props.theme.mediumDeviceWidth}) {\n    padding: 90px 0 50px;\n  }\n`;\nconst ListTitle = styled.h2`\n  font-weight: normal;\n  font-size: 22px;\n  margin-bottom: 5px;\n  @media (min-width: ${props => props.theme.mediumDeviceWidth}) {\n    font-size: 28px;\n    margin-bottom: 10px;\n  }\n`;\nconst ListBreadcrumb = styled.div`\n  font-weight: 300;\n  font-size: 14px;\n  margin-bottom: 5px;\n  color: ${props => props.theme.mediumGray};\n  @media (min-width: ${props => props.theme.mediumDeviceWidth}) {\n    margin-bottom: 20px;\n  }\n`;\nconst ListDragItem = styled.div`\n  outline: none;\n  position: relative;\n  z-index: ${props => 99999 - props.order};\n`;\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reorderItems = (startIndex, endIndex) => {\n      const items = Array.from(this.state.items);\n      const [removed] = items.splice(startIndex, 1);\n      items.splice(endIndex, 0, removed);\n      this.setState({\n        items\n      });\n    };\n\n    this.onDragEnd = result => {\n      const {\n        source,\n        destination\n      } = result;\n      if (!destination) return;\n      this.reorderItems(source.index, destination.index);\n    };\n\n    this.refreshItemsList = id => {\n      this.setState(prevState => {\n        return {\n          items: prevState.items.filter(item => item.id !== id)\n        };\n      });\n    };\n\n    this.state = {\n      listTitle: \"ELENCO STANZE B&B\",\n      listBreadcrumb: \"Numero stanza / tipologia\",\n      items: [{\n        id: '',\n        hasAction: true,\n        textValue: \"\",\n        image: ''\n      }],\n      apiResponse: [],\n      error: false,\n      errorMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    const data = {\n      ref_bb: localStorage.getItem('ref_bb'),\n      ref_proprietario: localStorage.getItem('email')\n    };\n    fetch('http://localhost:9000/searchStanzaBB/stanzaBB'\n    /*da cambiare credo*/\n    , {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(result => result.text()).then(result => {\n      this.setState({\n        apiResponse: JSON.parse(result)\n      });\n      var res = JSON.parse(result);\n\n      for (var i = 0; i < res.lenght; i++) {\n        this.setState({\n          items: [...this.state.items, {\n            id: i,\n            hasAction: true,\n            textValue: res[i].tipologia,\n            image: res[i].img\n            /*inserire immagine nel db*/\n\n          }]\n        });\n      }\n\n      if (this.state.apiResponse.status === 'error') {\n        this.setState({\n          error: true\n        });\n        this.setState({\n          errorMessage: this.state.apiResponse.message\n        });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/ErrorPage\",\n          state: {\n            error: true,\n            errorMessage: this.state.errorMessage\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 14\n        }\n      });\n    } else {\n      const {\n        listTitle,\n        listBreadcrumb,\n        items,\n        apiResponse,\n        error,\n        errorMessage\n      } = this.state;\n      return /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ListWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ListTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }, listTitle), /*#__PURE__*/React.createElement(ListBreadcrumb, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }, listBreadcrumb), /*#__PURE__*/React.createElement(DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: \"droppabe-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", {\n        ref: provided.innerRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, items.map((number, key) => /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: `draggable-${number.id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, (provided, snapshot) => /*#__PURE__*/React.createElement(ListDragItem, Object.assign({\n        ref: provided.innerRef\n      }, provided.draggableProps, provided.dragHandleProps, {\n        order: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(ListItem, {\n        number: number,\n        dragging: snapshot.isDragging,\n        onDeleteItem: this.refreshItemsList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 27\n        }\n      })))))))));\n    }\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["C:/Users/alexd/Documents/Progetto-Unipa/sitoBE/src/GestioneProprietario/Modifica/List.js"],"names":["React","Component","ListItem","styled","ThemeProvider","theme","DragDropContext","Droppable","Draggable","Redirect","ListWrapper","div","props","maxWidth","mediumDeviceWidth","ListTitle","h2","ListBreadcrumb","mediumGray","ListDragItem","order","List","constructor","reorderItems","startIndex","endIndex","items","Array","from","state","removed","splice","setState","onDragEnd","result","source","destination","index","refreshItemsList","id","prevState","filter","item","listTitle","listBreadcrumb","hasAction","textValue","image","apiResponse","error","errorMessage","componentDidMount","data","ref_bb","localStorage","getItem","ref_proprietario","fetch","method","headers","body","JSON","stringify","then","text","parse","res","i","lenght","tipologia","img","status","message","render","pathname","provided","snapshot","innerRef","map","number","key","draggableProps","dragHandleProps","isDragging"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ListItem from \"./ListItem\";\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport { theme } from \"../shared/theme\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst ListWrapper = styled.div`\r\n  width: ${props => props.theme.maxWidth};\r\n  max-width: 90%;\r\n  display: block;\r\n  margin: auto;\r\n  padding: 70px 0 20px;\r\n  position: relative;\r\n  z-index: 10;\r\n  @media (min-width: ${props => props.theme.mediumDeviceWidth}) {\r\n    padding: 90px 0 50px;\r\n  }\r\n`;\r\nconst ListTitle = styled.h2`\r\n  font-weight: normal;\r\n  font-size: 22px;\r\n  margin-bottom: 5px;\r\n  @media (min-width: ${props => props.theme.mediumDeviceWidth}) {\r\n    font-size: 28px;\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\nconst ListBreadcrumb = styled.div`\r\n  font-weight: 300;\r\n  font-size: 14px;\r\n  margin-bottom: 5px;\r\n  color: ${props => props.theme.mediumGray};\r\n  @media (min-width: ${props => props.theme.mediumDeviceWidth}) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\nconst ListDragItem = styled.div`\r\n  outline: none;\r\n  position: relative;\r\n  z-index: ${props => 99999 - props.order};\r\n`;\r\n\r\nclass List extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n                  listTitle:\"ELENCO STANZE B&B\",\r\n                  listBreadcrumb: \"Numero stanza / tipologia\",\r\n                  items :[\r\n                      {\r\n                        id: '',\r\n                        hasAction: true,\r\n                        textValue:\"\",\r\n                        image: ''\r\n                      }\r\n                  ],\r\n                  apiResponse: [],\r\n                  error:false,\r\n                  errorMessage: ''\r\n      };\r\n  }\r\n  componentDidMount(){\r\n    const data = {ref_bb:localStorage.getItem('ref_bb'),\r\n                  ref_proprietario: localStorage.getItem('email'),\r\n                }\r\n    fetch('http://localhost:9000/searchStanzaBB/stanzaBB'/*da cambiare credo*/,{\r\n      method:'POST',\r\n      headers:{'Content-type':'application/json'},\r\n      body: JSON.stringify(data)\r\n    })\r\n    .then((result)=>result.text())\r\n    .then((result)=>{\r\n      this.setState({apiResponse:JSON.parse(result)});\r\n      \r\n      var res=JSON.parse(result);\r\n      for(var i=0;i< res.lenght;i++){\r\n        this.setState({\r\n          items: [...this.state.items,{\r\n            id:i,\r\n            hasAction: true,\r\n            textValue:res[i].tipologia,\r\n            image:res[i].img /*inserire immagine nel db*/\r\n          }]\r\n        });\r\n      }\r\n      if(this.state.apiResponse.status === 'error') {\r\n        this.setState({ error: true });\r\n        this.setState({ errorMessage: this.state.apiResponse.message });\r\n    }\r\n    });\r\n  }\r\n\r\n  reorderItems = (startIndex, endIndex) => {\r\n    const items = Array.from(this.state.items);\r\n    const [removed] = items.splice(startIndex, 1);\r\n    items.splice(endIndex, 0, removed);\r\n    this.setState({ items });\r\n  };\r\n \r\n  onDragEnd = result => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n    this.reorderItems(source.index, destination.index);\r\n  };\r\n\r\n  refreshItemsList = id => {\r\n    this.setState(prevState => {\r\n      return {\r\n        items: prevState.items.filter(item => item.id !== id)\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if(this.state.error) {\r\n      return <Redirect\r\n          to={{\r\n              pathname: \"/ErrorPage\",\r\n              state: { \r\n                  error: true,\r\n                  errorMessage: this.state.errorMessage \r\n              }\r\n          }}\r\n      />}\r\n    else {\r\n    const { listTitle, listBreadcrumb, items, apiResponse, error, errorMessage } = this.state;\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <ListWrapper>\r\n          <ListTitle>{listTitle}</ListTitle>\r\n          <ListBreadcrumb>{listBreadcrumb}</ListBreadcrumb>\r\n          <DragDropContext onDragEnd={this.onDragEnd}>\r\n            <Droppable droppableId=\"droppabe-list\">\r\n              {(provided, snapshot) => (\r\n                <div ref={provided.innerRef}>\r\n                  {items.map((number, key) => (\r\n                    <Draggable\r\n                      draggableId={`draggable-${number.id}`}\r\n                    \r\n                    >\r\n                      {(provided, snapshot) => (\r\n                        <ListDragItem\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          order={key}\r\n                        >\r\n                          <ListItem\r\n                            number={number}\r\n                            dragging={snapshot.isDragging}\r\n                            onDeleteItem={this.refreshItemsList}\r\n                          />\r\n                        </ListDragItem>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </DragDropContext>\r\n        </ListWrapper>\r\n      </ThemeProvider>\r\n    );}\r\n  }\r\n}\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}